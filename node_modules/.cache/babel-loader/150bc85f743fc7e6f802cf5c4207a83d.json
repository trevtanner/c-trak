{"ast":null,"code":"var _jsxFileName = \"/home/trevor/Desktop/programming/React-learning/c-trak/src/components/Users/AddUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport classes from \"./AddUser.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddUser = props => {\n  _s();\n\n  const [error, setError] = useState();\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredCoin, setEnteredCoin] = useState(\"BTC\");\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const addUserHandler = event => {\n    event.preventDefault();\n\n    if (enteredAmount.trim().length === 0 || enteredValue.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid amount and value (non-empty values).\"\n      });\n      return;\n    }\n\n    props.onAddUser(enteredCoin, enteredAmount, enteredValue, new Date(enteredDate));\n    setEnteredCoin(\"BTC\");\n    setEnteredAmount(\"\");\n    setEnteredValue(\"\");\n    setEnteredDate(\"\");\n  };\n\n  const coinChangeHandler = event => {\n    setEnteredCoin(event.target.value);\n  };\n\n  const amountChangeHandler = event => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(ErrorModal, {\n      title: error.title,\n      message: error.message,\n      onConfirm: errorHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      className: classes.input,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addUserHandler,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"coin\",\n          children: \"Coin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n          id: \"coin\",\n          type: \"number\",\n          value: enteredCoin,\n          onChange: coinChangeHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BTC\",\n            children: \"Bitcoin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ETH\",\n            children: \"Ether\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ADA\",\n            children: \"Cardano\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"BSC\",\n            children: \"Binance Smart Chain\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          className: \"pt-2\",\n          children: [\"Amount of \", enteredCoin]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"amount\",\n          type: \"number\",\n          value: enteredAmount,\n          onChange: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"value\",\n          children: \"Value in dollars ($)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"value\",\n          type: \"number\",\n          value: enteredValue,\n          onChange: valueChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-expense__control\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Purchase Date\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            min: \"2009-01-03 00:00:00\",\n            value: enteredDate,\n            onChange: dateChangeHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          children: \"Add Purchase\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddUser, \"LOjY2fgkmbz8GjsKV5cqeHoiYBM=\");\n\n_c = AddUser;\nexport default AddUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUser\");","map":{"version":3,"sources":["/home/trevor/Desktop/programming/React-learning/c-trak/src/components/Users/AddUser.js"],"names":["React","useState","Form","Card","Button","ErrorModal","classes","AddUser","props","error","setError","enteredAmount","setEnteredAmount","enteredCoin","setEnteredCoin","enteredValue","setEnteredValue","enteredDate","setEnteredDate","addUserHandler","event","preventDefault","trim","length","title","message","onAddUser","Date","coinChangeHandler","target","value","amountChangeHandler","valueChangeHandler","dateChangeHandler","errorHandler","input"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { Form } from \"react-bootstrap\";\n\nimport Card from \"../UI/Card\";\nimport Button from \"../UI/Button\";\nimport ErrorModal from \"../UI/ErrorModal\";\nimport classes from \"./AddUser.module.css\";\n\nconst AddUser = (props) => {\n  const [error, setError] = useState();\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredCoin, setEnteredCoin] = useState(\"BTC\");\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const addUserHandler = (event) => {\n    event.preventDefault();\n    if (enteredAmount.trim().length === 0 || enteredValue.trim().length === 0) {\n      setError({\n        title: \"Invalid input\",\n        message: \"Please enter a valid amount and value (non-empty values).\",\n      });\n      return;\n    }\n    props.onAddUser(enteredCoin, enteredAmount, enteredValue, new Date(enteredDate));\n    setEnteredCoin(\"BTC\");\n    setEnteredAmount(\"\");\n    setEnteredValue(\"\");\n    setEnteredDate(\"\");\n  };\n\n  const coinChangeHandler = (event) => {\n    setEnteredCoin(event.target.value);\n  };\n\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const valueChangeHandler = (event) => {\n    setEnteredValue(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const errorHandler = () => {\n    setError(null);\n  };\n\n  return (\n    <div>\n      {error && (\n        <ErrorModal\n          title={error.title}\n          message={error.message}\n          onConfirm={errorHandler}\n        />\n      )}\n      <Card className={classes.input}>\n        <form onSubmit={addUserHandler}>\n          <label htmlFor=\"coin\">Coin</label>\n          <Form.Select\n            id=\"coin\"\n            type=\"number\"\n            value={enteredCoin}\n            onChange={coinChangeHandler}\n          >\n            <option value=\"BTC\">Bitcoin</option>\n            <option value=\"ETH\">Ether</option>\n            <option value=\"ADA\">Cardano</option>\n            <option value=\"BSC\">Binance Smart Chain</option>\n          </Form.Select>\n          <label htmlFor=\"amount\" className=\"pt-2\">Amount of {enteredCoin}</label>\n          <input\n            id=\"amount\"\n            type=\"number\"\n            value={enteredAmount}\n            onChange={amountChangeHandler}\n          />\n          <label htmlFor=\"value\">Value in dollars ($)</label>\n          <input\n            id=\"value\"\n            type=\"number\"\n            value={enteredValue}\n            onChange={valueChangeHandler}\n          />\n          <div className='new-expense__control'>\n          <label>Purchase Date</label>\n          <input\n            type='date'\n            min='2009-01-03 00:00:00'\n            value={enteredDate}\n            onChange={dateChangeHandler}\n          />\n        </div>\n          <Button type=\"submit\">Add Purchase</Button>\n        </form>\n      </Card>\n    </div>\n  );\n};\n\nexport default AddUser;\n"]},"metadata":{},"sourceType":"module"}